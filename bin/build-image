#!/usr/bin/env bash

# Copyright 2011, Joyent. Inc. All rights reserved.

set -o errexit
set -o pipefail

timestamp=`date +%Y%m%d%H%M%S`

fatal() {
  printf "$(basename $0): fatal error: $*\n"
  exit 1
}

create_layout() {
  echo "==> Copying files and creating layout"
  [[ ! -d cache ]] && mkdir cache
  [[ ! -d cache/smartos-vmtools ]] && mkdir cache/smartos-vmtools
  cp -r layout/* cache/smartos-vmtools/
  cp -r src/windows cache/smartos-vmtools/
  cp -r src/linux cache/smartos-vmtools/
  cp -r src/freebsd cache/smartos-vmtools/
}

pack_tar() {
  echo "==> Creating tarball"
  cd cache
  tar -czf smartos-vmtools-$timestamp.tar.gz smartos-vmtools
  cd ../
}

create_zip() {
	echo "==> Creating zipfile"
	cd cache
	ZIP=`which zip`
	if [ $? -ne 0 ]; then
		echo "Cannot find a zip tool. Skipping zip file creation"
	else
    $ZIP -r smartos-vmtools-$timestamp.zip smartos-vmtools
	fi
}

pack_iso() {
  echo "==> Creating ISO"
  cd cache
  case `uname -s` in
    Darwin)
      hdiutil makehybrid -default-volume-name "SmartOS Guest Tools" -iso -joliet \
        -o smartos-vmtools-$timestamp.iso smartos-vmtools
      ;;
    SunOS)
      mkisofs -J -R -input-charset iso8859-1 -V "SmartOS Guest Tools" -o smartos-vmtools-$timestamp.iso \
			  smartos-vmtools
      ;;
    *)
      fatal "Not a supported Operating system. Try it on OSX or SmartOS"
      ;;
  esac
  cd ../
}

# ensure we're always in the right working directory
cd $(dirname $0)/../
echo "==> Starting package build"
create_layout
pack_iso
pack_tar
create_zip
echo "==> All done"
exit 0
